{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      n1 = _useState2[0],\n      setN1 = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      n2 = _useState4[0],\n      setN2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      soma = _useState6[0],\n      setSoma = _useState6[1];\n\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      value: n1,\n      onChangeText: function onChangeText(val) {\n        setN1(val);\n      }\n    }), _jsx(TextInput, {\n      value: n2,\n      onChangeText: function onChangeText(val) {\n        setN2(val);\n      }\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        setSoma(parseInt(n1) + parseInt(n2));\n      },\n      children: _jsx(Text, {\n        children: \"Somar\"\n      })\n    }), _jsx(Text, {\n      children: soma\n    })]\n  });\n}","map":{"version":3,"names":["useState","App","n1","setN1","n2","setN2","soma","setSoma","val","parseInt"],"sources":["C:/Users/Desenvolvimento/Desktop/2-DES/indmo/aula02/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { View, TouchableOpacity, Text, TextInput, StyleSheet} from \"react-native\";\n\nexport default function App(){\n  const [n1, setN1] = useState(\"\");\n  const [n2, setN2] = useState(\"\")\n  const [soma, setSoma] = useState(\"\")\n\n  return(\n    <View>\n      <TextInput value={n1} onChangeText={(val) => { setN1(val);}}/>\n      <TextInput value={n2} onChangeText={(val) => { setN2(val);}}></TextInput>\n      <TouchableOpacity onPress={() => { setSoma(parseInt(n1) + parseInt(n2))}}>\n        <Text>Somar</Text>\n      </TouchableOpacity>\n      <Text>{soma}</Text>\n    </View>\n  );\n\n}"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAc;EAC3B,gBAAoBD,QAAQ,CAAC,EAAD,CAA5B;EAAA;EAAA,IAAOE,EAAP;EAAA,IAAWC,KAAX;;EACA,iBAAoBH,QAAQ,CAAC,EAAD,CAA5B;EAAA;EAAA,IAAOI,EAAP;EAAA,IAAWC,KAAX;;EACA,iBAAwBL,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EAEA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAEL,EAAlB;MAAsB,YAAY,EAAE,sBAACM,GAAD,EAAS;QAAEL,KAAK,CAACK,GAAD,CAAL;MAAY;IAA3D,EADF,EAEE,KAAC,SAAD;MAAW,KAAK,EAAEJ,EAAlB;MAAsB,YAAY,EAAE,sBAACI,GAAD,EAAS;QAAEH,KAAK,CAACG,GAAD,CAAL;MAAY;IAA3D,EAFF,EAGE,KAAC,gBAAD;MAAkB,OAAO,EAAE,mBAAM;QAAED,OAAO,CAACE,QAAQ,CAACP,EAAD,CAAR,GAAeO,QAAQ,CAACL,EAAD,CAAxB,CAAP;MAAqC,CAAxE;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EAHF,EAME,KAAC,IAAD;MAAA,UAAOE;IAAP,EANF;EAAA,EADF;AAWD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useSyncExternalStore } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      n1 = _useState2[0],\n      setN1 = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      n2 = _useState4[0],\n      setN2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      res = _useState6[0],\n      setRes = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      op = _useState8[0],\n      setOp = _useState8[1];\n\n  var calcular = function calcular() {\n    if (op == \"+\") {\n      setRes(Number(n1) + n2);\n    } else if (op == \"-\") {\n      setRes(value - value2);\n    } else if (op == \"/\") {\n      setRes(value / value2);\n    } else if (op == \"*\") {\n      setRes(value * value2);\n    }\n  };\n\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Primeiro numero\",\n      value: n1,\n      onChangeText: function onChangeText(val) {\n        setN1(val);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Segundo numero\",\n      value: n2,\n      onChangeText: function onChangeText(val) {\n        setN2(val);\n      }\n    }), _jsxs(View, {\n      style: style.icons,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(parseInt(n1) + parseInt(n2));\n        },\n        children: _jsx(Text, {\n          children: \"+\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(parseInt(n1) - parseInt(n2));\n        },\n        children: _jsx(Text, {\n          children: \"-\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(parseInt(n1) / parseInt(n2));\n        },\n        children: _jsx(Text, {\n          children: \"/\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setOp(parseInt(n1) * parseInt(n2));\n        },\n        children: _jsx(Text, {\n          children: \"*\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          calcular();\n        },\n        children: _jsx(Text, {\n          children: \"Calcular\"\n        })\n      })]\n    }), _jsx(Text, {\n      children: res\n    })]\n  });\n}\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    borderBottomColor: 'black',\n    borderBottomWidth: '4px',\n    borderRightWidth: '4px'\n  },\n  icons: {\n    flex: 2,\n    display: 'flex',\n    flexDirection: 'row',\n    marginLeft: '10px'\n  }\n});","map":{"version":3,"names":["useState","useSyncExternalStore","App","n1","setN1","n2","setN2","res","setRes","op","setOp","calcular","Number","value","value2","style","container","val","icons","parseInt","StyleSheet","create","flex","alignItems","justifyContent","display","borderBottomColor","borderBottomWidth","borderRightWidth","flexDirection","marginLeft"],"sources":["C:/Users/Desenvolvimento/Desktop/2-DES/indmo/aula02/App.js"],"sourcesContent":["import { useState, useSyncExternalStore } from \"react\";\nimport { View, TouchableOpacity, Text, TextInput, StyleSheet} from \"react-native\";\n\nexport default function App(){\n  const [n1, setN1] = useState(\"\");\n  const [n2, setN2] = useState(\"\");\n  const [res, setRes] = useState(\"\");\n  const [op, setOp] = useState(\"\");\n\n  const calcular = () => {\n    if(op == \"+\"){\n    setRes(Number(n1) + (n2));\n    }else if(op == \"-\"){\n      setRes(value - value2);\n    }else if(op == \"/\"){\n      setRes(value / value2);\n    }else if(op == \"*\"){\n      setRes(value * value2);\n    }\n  }\n\n  return(\n    <View style={style.container}>\n      <TextInput placeholder=\"Primeiro numero\" value={n1} onChangeText={(val) => { setN1(val);}}/>\n      <TextInput placeholder=\"Segundo numero\" value={n2} onChangeText={(val) => { setN2(val);}}></TextInput>\n      <View style={style.icons}>\n      <TouchableOpacity onPress={() => {setOp(parseInt(n1) + parseInt(n2))}}>\n      <Text>+</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => { setOp(parseInt(n1) - parseInt(n2))}}>\n      <Text>-</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => { setOp(parseInt(n1) / parseInt(n2))}}>\n      <Text>/</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => { setOp(parseInt(n1) * parseInt(n2))}}>\n      <Text>*</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => {calcular()}}>\n        <Text>Calcular</Text>\n      </TouchableOpacity>\n      </View>\n      <Text>{res}</Text>\n    </View>\n  );\n\n}\n\nconst style = StyleSheet.create({\n  container:{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    borderBottomColor: 'black',\n    borderBottomWidth: '4px',\n    borderRightWidth: '4px',\n\n  },\n  icons:{\n    flex: 2,\n    display: 'flex',\n    flexDirection: 'row',\n    marginLeft: '10px',\n    \n\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}